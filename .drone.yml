---
kind: pipeline
name: build
clone:
  depth: 1
volumes:
- name: gopath
  temp: {}
steps:
- name: durl
  image: quay.io/suzuki_shunsuke/durl:1.0.0@sha256:2753542727d8e68a823dece28f60bc0bae7d0ebac291e3563939802ff2bef6c0
  commands:
  - sh scripts/durl.sh
- name: download go modules
  image: golang:1.24.0@sha256:4546829ecda4404596cf5c9d8936488283910a3564ffc8fe4f32b33ddaeff239
  commands:
  - go mod download
  volumes: &volumes
  - name: gopath
    path: /go
- name: golangci-lint
  image: golangci/golangci-lint:v1.64.5-alpine@sha256:05e1762ba74443e44b3a179e9549ad134a9ee2180d4fcc06b19a77ea0c6ac66a
  commands:
  - golangci-lint run
  volumes: *volumes
- name: benchmark
  image: golang:1.24.0@sha256:4546829ecda4404596cf5c9d8936488283910a3564ffc8fe4f32b33ddaeff239
  commands:
  - cd flute
  - go test -bench=. -benchmem
  volumes: *volumes
- name: codecov
  image: golang:1.24.0@sha256:4546829ecda4404596cf5c9d8936488283910a3564ffc8fe4f32b33ddaeff239
  commands:
  # bash and cgo seem to be required
  - bash scripts/codecov-test.sh
  - curl -s https://codecov.io/bash > /tmp/codecov.sh
  - test "$LOCAL" = "true" -o "$DRONE_BUILD_EVENT" = "pull_request" || bash /tmp/codecov.sh
  volumes: *volumes
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
